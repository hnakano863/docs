#+TITLE: 状態空間モデル
#+hugo_base_dir: ../../
#+hugo_section: /docs/時系列分析/
#+options: \n:t
* 状態空間モデルの構成
状態空間モデルとは、直接観測されない「状態」の存在を仮定したモデルである。

基本的なワークフローは、
1. 方程式によるデータの表現
2. 統計手法を用いた状態/パラメタの推定
の 2 部に分かれる。
** 方程式によるデータ表現
状態空間モデルでは、目に見えない状態変化と状態から得られる観測結果を 2 つの異なる方程式に分けて表現する。
- 目に見えない状態の変化 : 状態方程式
- 状態から得られる観測結果 : 観測方程式
*** 状態方程式
状態変化のプロセスを記述する方程式のことを状態方程式という。

状態方程式の概念式は、

{状態} = {前時点の状態を用いた予測値} + {過程誤差}

で表される。

*** 観測方程式
状態から観測値を得るプロセスを記述する方程式を観測方程式という。

観測方程式の概念式は、

{観測値} = {状態} + {観測誤差}

で表される。

* 線形ガウス状態空間モデル
一次方程式でモデルが表現可能で、なおかつ誤差が正規分布に従うモデルのことを、線形ガウス状態空間モデルという。

状態空間モデルそのものはかなり幅広い概念だが、時系列データ分析の初歩では、大抵の状態空間モデルは線形ガウス状態空間モデルを仮定している。

線形ガウス状態空間モデルの場合は、状態の推定とモデルのパラメタの推定を分けて行うことができる。
- 状態の推定: カルマンフィルタを使う。
- モデルのパラメタの推定: 最尤法を使う。

この方法は、計算コストや実装コストが低く、ストリーム処理が可能で、オンライン予測に適している。

以下では、線形ガウス状態空間モデルの概略を述べる。
** 状態方程式と観測方程式
*** 状態方程式
時点 \(t\) での状態を、\(\bm{\mu}_t\) とおく。
ただし、 \(\bm{\mu}_t\) は \(D\) 次元ベクトルとする。

このとき、線形ガウス状態空間モデルにおける状態方程式は、
    
\[\begin{align} \bm{\mu}_t &= T_t\bm{\mu}_{t-1} + R_t\bm{\eta}_t, & \bm{\eta}_t \sim \mathcal{N}(0, Q_t) \end{align}\]

となる。

ただし、記号法は以下の通りである。

|-----------------+----------------------------------------------------------------------------------|
| \(T_t\)         | 状態 \(\bm{\mu}_{t-1}\) から \(\bm{\mu}_t\) へ移るときの状態変化を記述する行列。 |
| \(\bm{\eta}_t\) | 状態変化に伴う過程誤差のベクトル。 平均ゼロの正規分布に従う。                    |
| \(R_t\)         | 誤差 \(\bm{\eta}_t\) が状態へおよぼす影響を記述する行列。                        |
| $Q_t$           | 誤差 \(\bm{\eta}_t\) が従う正規分布の共分散行列。                                |
|-----------------+----------------------------------------------------------------------------------|

例えば、状態が ランダムウォーク である場合は、 \(T_t\) , \(R_t\) はともに \(D\) 次単位行列として、

\[\begin{align} \bm{\mu}_t &= \bm{\mu}_{t-1} + \bm{\eta}_t, & \bm{\eta}_t \sim \mathcal{N}(0, Q_t) \end{align}\]

となる。

(参考)三次元空間上のランダムウォーク
#+begin_src jupyter-julia :session jl :kernel julia-1.4 :async yes :file :exports results
using Plots; gr()
using Distributions

d = MvNormal(3, 1)

arr = cumsum(rand(d, 100), dims=2)

plot(arr[1,:], arr[2,:], arr[3,:])
#+end_src

#+RESULTS:
[[file:./.ob-jupyter/6ab14450ebeea2f281d1066978d8ef3bb9b3ba4e.svg]]

*** 観測方程式
時点 \(t\) での観測値を、\(\bm{y}_t\) とおく。
ただし、 \(\bm{y}_t\) は \(E\) 次元ベクトルとする。

このとき、線形ガウス状態空間モデルにおける観測方程式は、

\[\begin{align} \bm{y}_t &= Z_t\bm{\mu}_t + \bm{\varepsilon}_t, & \bm{\varepsilon}_t \sim \mathcal{N}(0, H_t) \end{align}\]

となる。

ただし、記号法は以下の通りである。

|------------------------+----------------------------------------------------------|
| \(Z_t\)                | 状態 \(\bm{\mu}_t\) を観測する過程を記述する行列。       |
| \(\bm{\varepsilon}_t\) | 観測誤差のベクトル。 平均ゼロの正規分布に従う。          |
| $H_t$                  | 誤差 \(\bm{\varepsilon}_t\) が従う正規分布の共分散行列。 |
|------------------------+----------------------------------------------------------|

例えば、状態をそのまま観測する場合は、 \(Z_t\) は単位行列となる。従って観測方程式は、

\[\begin{align} \bm{y}_t &= \bm{\mu}_t + \bm{\varepsilon}_t, & \bm{\varepsilon}_t \sim \mathcal{N}(0, H_t) \end{align}\]

となる。

** フィルタリング
観測値を用いて状態の予測値を補正することをフィルタリングという。
フィルタリングの流れは以下の図の通り
   
#+begin_src plantuml :exports results
状態 -> 状態: 状態方程式から未来の状態を予測
状態 -> 観測: 観測方程式から未来の観測値を予測
状態 <- 観測: 実測の観測値をもとに、予測した状態を補正
状態 -> 状態: 状態方程式から未来の状態を予測
#+end_src

#+RESULTS:
[[file:/tmp/babel-2rW9Tr/plantuml-2Qskc2.png]]

* 状態方程式/観測方程式によるデータ表現
線形ガウス状態空間モデルの仲間のうち、いくつかの名前のついたモデルを以下で見ていく。
これらを見ることによって、状態方程式と観測方程式による表現の方法について慣れてほしい。
** 線形回帰モデル
*** 説明変数のないモデル 
説明変数のない線形回帰モデルは最も簡単なモデルといえる。
以下の式で表される。
    
\[\begin{align}y_t &= \alpha + v_t\end{align} & v_t \sim \mathcal{N}(0, \sigma^2)\]

これを状態方程式と観測方程式に分割するならば、

\[ \left\{ \begin{align} \mu_t &= \alpha \\ y_t &= \mu_t + v_t \\ \end{align} \right. \]
    
これは、状態は時刻に寄らず一定であり、分散一定の観測誤差だけがあるモデルとして解釈できる。

*** 1 次の自己回帰モデル
一次の自己回帰モデル AR(1)の式は、

\[ \begin{align} y_t &= c + \phi_1 y_{t-1} + w_t , & w_t \sim \mathcal{N}(0,\sigma^2) \end{alignh} \]

と表される。

これを状態方程式と観測方程式を用いて表現すると、

\[ \left\{ \begin{align} \mu_t &= c + \phi_1 \mu_{t-1} + w_t \\ y_t &= \mu_t \\ \end{align} \right. \]

となる。

AR モデルを状態空間モデルとして表すばあい、モデルがまるまる状態方程式に入る。
AR モデルは観測誤差がないものとしてモデリングされていることに注意。

** ローカルレベルモデル
過程誤差と観測誤差をともに含むモデルで、最も簡単な状態空間モデルのひとつ。
以下の方程式で表される。

\[ \left\{ \begin{align}
\mu_t &= \mu_{t-1} + w_t,  & w_t \sim \mathcal{N}(0, \sigma_w^2) \\
y_t &= \mu_t + v_t,  & v_t \sim \mathcal{N}(0, \sigma_v^2) \\
\end{align} \right. \]

状態方程式のみを見るとランダムウォーク系列である。
従って、ローカルレベルモデルのことをランダムウォーク+ノイズモデルということがある。

ローカルレベルモデルの疑似データとコレログラム
#+begin_src jupyter-python :session py :kernel py-project :async yes :file :exports results
import statsmodels.api as sm
import matplotlib.pyplot as plt
import numpy as np

# ランダムウォークの疑似データ作成
mu = np.cumsum(np.random.randn(200))

# 観測誤差を載せる
y = mu + np.random.normal(0, 2, 200)

# plot template
fig = plt.figure(constrained_layout=True, figsize=(8, 5))
gs = fig.add_gridspec(2,2)
ax1 = fig.add_subplot(gs[0,:])
ax1.plot(y)
ax1.set_title('Sample')

ax2 = fig.add_subplot(gs[1,0])
sm.graphics.tsa.plot_acf(y, ax=ax2)
ax2.set_title("Autocorrelation")

ax3 = fig.add_subplot(gs[1,1])
sm.graphics.tsa.plot_pacf(y,ax=ax3)
ax3.set_title("Partial Autocorrelation")
plt.show()
#+end_src

#+RESULTS:
[[file:./.ob-jupyter/0e2a627a9faaea474eebc14fd21ed98d6132065d.png]]


*** 期待値
時点 $t-1$ までの状態がわかっているものとして、時点 $t$ における \(\mu_t\) の期待値を考える。
過程誤差および観測誤差は平均 0 の正規分布に従うため、期待値をとると消える。
従って、

\[ \mathrm{E}[\mu_t|\mu_{t-1}] = \mu_{t-1} \]
    
すなわち、状態は時刻に寄らず一定であると考えられる。
つまり、もしもローカルレベルモデルを使って予測を行うのなら、予測値は前の値をそのまま返すだけのものとなる。
それゆえ、このモデルそのものは予測に役立つものではない。
*** ARIMA モデルとの関係
ローカルレベルモデルにおいて、観測値の差分系列をとってみると、

\[ \begin{align} \Delta y_t &= y_t - y_{t-1} \\
    &= (\mu_t + v_t) - (\mu_{t-1} + v_{t-1}) \\
    &= (\mu_{t-1} + w_t + v_t) - (\mu_{t-1} + v_{t-1}) \\
    &= w_t + v_t - v_{t-1} \\ \end{align} \]
    
すなわち、ローカルレベルモデルの差分系列は 1 次の移動平均モデル MA(1)で表せる。
このことから、ローカルレベルモデルそれ自体は、ARIMA(0,1,1)と等価である。

** ローカル線形トレンドモデル
ローカルレベルモデルの状態変化に時間変化するトレンドを加えたものを、ローカル線形トレンドモデルという。
状態方程式と観測方程式は以下のとおり。

\[ \left\{ \begin{align}
\delta_t &= \delta_{t-1} + \zeta_t, & \zeta_t \sim \mathcal{N}(0,\sigma_{\zeta}^2) \\
\mu_t &= \mu_{t-1} + \delta_{t-1} + w_t, & w_t \sim \mathcal{N}(0, \sigma_w^2) \\
y_t &= \mu_t + v_t, & v_t \sim \mathcal{N}(0, \sigma_v^2) \\
\end{align} \right. \]

*** 線形回帰モデルとの比較
ローカル線形トレンドモデルへの理解を深めるために、線形回帰モデルと比較する。
線形回帰モデルの方程式は、

\[ \begin{align} y_t &= \alpha + \beta t + v_t , & v_t \sim \mathcal{N}(0, \sigma_v^2) \end{align} \]

である。

これをローカル線形トレンドモデルの方程式に従って状態方程式と観測方程式の形に直すと、

\[ \left\{ \begin{align}
\delta_t &= \beta \\
\mu_t &= \mu_{t-1} + \delta_{t-1} \\
y_t &= \mu_t + v_t, & v_t \sim \mathcal{N}(0, \sigma_v^2) \\
\end{array} \right. \]

となる。ただし、 \(\mu_0 = \alpha\) とする。

ローカル線形トレンドモデルと線形回帰モデルの方程式を比較することにより、ローカル線形トレンドモデルの特徴として以下の 2 点がわかる。
1. トレンドの値が時間変化しうる。
2. 過程誤差を含む。

*** 行列による表現
ローカル線形トレンドモデルは線形ガウス状態空間モデルの一つであるから、行列を用いて以下のように線形ガウス状態空間モデルの一般形にあてはめて表現できる。

$$ \left\{ \begin{align} \begin{bmatrix}
\mu_t \\ \delta_t \\ \end{bmatrix} &= \begin{bmatrix} 1 & 1 \\ 0 & 1 \\
\end{bmatrix} \begin{bmatrix} \mu_{t-1} \\ \delta_{t-1} \\ \end{bmatrix} + \bm{\eta}_t \\
y_t &= \begin{bmatrix} 1 & 0 \\ \end{bmatrix} \begin{bmatrix} \mu_t \\ \delta_t \\ \end{bmatrix} + v_t \\
\end{align} \right. $$

ただし、 $\bm{\eta}_t \sim \mathcal{N}(0, Q_t)$ , $v_t \sim \mathcal{N}(0, \sigma_v^2)$ である。
$Q_t$ は過程誤差の共分散行列で、

$$ Q_t = \begin{bmatrix} \sigma_{\zeta}^2 & 0 \\ 0 & \sigma_w^2 \\ \end{bmatrix} $$

** 周期変動のモデル化
*** ダミー変数の利用
ダミー変数を導入することにより、周期的変動をモデリングできる。
たとえば、頻度 4 の季節変動があるばあい、

$$ \left\{ \begin{align}
\gamma_{1,t} &= -\gamma_{1,t-1}-\gamma_{2,t-1}-\gamma_{3,t-1} + \eta_t \,, & \eta_t \sim \mathcal{N}(0, \sigma_{\eta}^2) \\
\gamma_{2,t} &= \gamma_{1,t-1} & \\
\gamma_{3,t} &= \gamma_{2,t-1} & \\
y_t &= \gamma_{1,t} + v_t \,, & v_t \sim \mathcal{N}(0,\sigma_v^2) \\
\end{align} \right. $$

と表すことができる。

これがきちんと周期をモデリングできていることを確認するために、以下で $\gamma_{1, t+1}$ を計算する。(簡単のため、以下では過程誤差 $\xi_t$ を無視する)

第一式で $t=t+1$ とすると、

$$ \gamma_{1, t+1} = -\gamma_{1,t}-\gamma_{2,t}-\gamma_{3,t} $$

これに $t=t$ における結果を適用して $\gamma_{1,t}$ , $\gamma_{2,t}$ , $\gamma_{3, t}$ を消去すると、

$$ \gamma_{1,t+1} = -(-\gamma_{1,t-1}-\gamma_{2,t-1}-\gamma_{3,t-1})-\gamma_{1,t-1}-\gamma_{2,t-1} $$

整理して、

$$ \gamma_{1, t+1} = \gamma_{3, t-1} $$

したがって、 $\gamma_{1, t}$ を $t=0$ から順に並べていくと、

$$ \gamma_{1, 0}, \  -(\gamma_{1, 0}+\gamma_{2,0}+\gamma_{3,0}),\  \gamma_{3, 0},\  \gamma_{2, 0}, \  \gamma_{1, 0},\  \ldots $$

というふうにローテーションする。
従って、頻度 4 の季節変動が表現されている

*** 周期関数の利用
ここでは詳しく述べないが、 $\sin$ , $\cos$ などの周期関数を用いて周期成分をモデリングすることもある

** 基本構造時系列モデル
トレンド、周期変動、ホワイトノイズの和で表される時系列データのことを、 **基本構造時系列モデル** という

基本構造時系列モデルは状態空間モデルを用いて表すことができる。

ローカル線形トレンドモデルに季節項を入れたものと考えてよい。観測方程式のみ示す。

$$ y_t = \mu_t + \gamma_t + v_t $$

ただし、 $\mu_t$ はトレンド成分, $\gamma_t$ は季節成分を表す

** 時変係数モデル
ARIMAX のように、外生変数(回帰変数)を含むモデルを構築できる。
これにより、異常値の補正などが可能となる。

また、線形回帰モデルや ARIMAX とは異なり、外生変数が時間変化するモデルを作成できる。

例えば、ローカルレベルモデルに時変係数を入れたモデルは、

$$ \left\{ \begin{align}
\beta_t &= \beta_{t-1} + \tau_t \\
\mu_t &= \mu_{t-1} + w_t \\
y_t &= \mu_t + \beta_t \psi_t + v_t \\
\end{align} \right. $$

ただし、 $\tau_t$ , $w_t$ , $v_t$ は誤差項で、 $\psi_t$ は外生変数、 $\beta_t$ は時変係数とする。

* カルマンフィルタによる推定法
基本の流れを習得するために、ローカルレベルモデルを前提とする。

カルマンフィルタの基本の流れ
1. 1 時点先の状態の予測
2. 観測値を用いての状態の補正

ローカルレベルモデルでは予測は前の時点と同じなので、ここでは補正の方法を扱う。
補正前と補正後との関係式は、

{補正後の状態} = {補正前の状態} + {カルマンゲイン} * {予測残差}

補正後の状態のことを **フィルタ化推定量** という。

** カルマンゲイン
補正の大きさを制御する係数のことを、カルマンゲインという。

カルマンゲインのアイディア
- 状態の予測誤差が大きいとき: 状態の予測は外れやすいので、補正は大きくすべき。
- 観測誤差が大きいとき: 観測値は信頼できないので、観測値による補正量は小くするべき。

カルマンゲインの定義の概念式

{カルマンゲイン} = {状態の予測誤差の分散} / ( {状態の予測誤差の分散} + {観測誤差の分散} )

** ローカルレベルモデルでのカルマンフィルタ
*** 記号法
以下に、ローカルレベルモデルの式を再掲する。

$$ \left\{ \begin{align}
\mu_t &= \mu_{t-1} + w_t, & w_t \sim \mathcal{N}(0, \sigma_w^2) \\
y_t &= \mu_t + v_t , & v_t \sim \mathcal{N}(0, \sigma_v^2) \\
\end{align} \right. $$

以下、いくつか記号を導入する。特に明記しなければ、今後も同様の記号を用いる。

1. 時点 $t$ までの全ての観測値 $\{y_1, \cdots ,y_t\}$ を $Y_t$ とする。
2. 時点 $t$ における観測値 $y_t$ の予測値を $\hat{y}_t$ とする。
3. 時点 $t$ における状態 $\mu_t$ の予測値を $\hat{\mu}_t$ とする。
    予測値 $\hat{\mu}_t$ は、前時点までの観測値 $Y_{t-1}$ が得られている条件のもとで、
    状態方程式の期待値をとることで求める。
    従って、

    $$ \hat{\mu}_t = \mathrm{E}[\mu_t|Y_{t-1}] $$

4. 状態の予測値 $\hat_{\mu}_t$ を時点 $t$ までの観測値 $Y_t$ で補正したものを、フィルタ化推定量と呼び、
$\mu_{t|t}$ であらわす。
    フィルタ化推定量は $Y_t$ が得られた条件のもとでの $\mu_t$ の期待値である。
    従って、

    $$ \mu_{t|t} = \mathrm{E}[\mu_t|Y_t] $$

5. 時点 $t$ における状態 $\mu_{t}$ の予測誤差の分散を $P_t$ で表す。
    $P_t$ は、 $Y_{t-1}$ が与えられた条件のもとの $\mu_t$ の分散である。
    従って、

    $$ P_t = \mathrm{Var}[\mu_t|Y_{t-1}] $$

6. 時点 $t$ でのフィルタ化推定量 $\mu_{t|t}$ の推定誤差の分散を $P_{t|t}$ で表す。
    $P_{t|t}$ は、 $Y_t$ が与えられた条件のもとでの状態 $\mu_t$ の分散である。
    従って、

    $$ P_{t|t} = \mathrm{Var}[\mu_t|Y_t] $$

7. 時点 $t$ での観測値 $y_t$ の予測誤差の分散を $F_t$ で表す。
8. 時点 $t$ でのカルマンゲインを $K_t$ で表す。

*** カルマンフィルタの計算の流れ
まず、時点 $t$ における状態の予測値 $\hat{\mu}_t$ を求める。
ローカルレベルモデルでは、状態変化は起こらないので、前時点の状態をそのまま用いればよい。
このとき、前時点の状態はすでに観測値によって補正されたフィルタ化推定量であることに注意する。
従って、

$$ \hat{\mu}_t = \mu_{t-1|t-1} $$

次に、状態の予測誤差の分散 $P_t$ を求める。
状態が $t$ 時点にうつるのに伴って、過程誤差 $w_t$ の大きさの分だけ状態の予測誤差が大きくなる。
従って、

$$ P_t = P_{t-1|t-1} + \sigma_w^2 $$

次に、観測値の予測値 $\hat{y}_t$ を求める。
ローカルレベルモデルでは、観測値と状態の予測値は等しいので、

$$ \hat{y}_t = \hat{\mu}_t $$

観測値の予測誤差の分散 $F_t$ を求める。
観測値の予測誤差は、状態の予測誤差に観測誤差が加わるので、

$$ F_t = P_t + \sigma_v^2 $$

カルマンゲイン $K_t$ を求める。
{カルマンゲイン} = {状態の予測誤差の分散} / ( {状態の予測誤差の分散} + {観測誤差の分散} )なので、

$$ K_t = \frac{P_t}{P_t + \sigma_v^2} = \frac{P_t}{F_t} $$

従って、時刻 $t$ におけるフィルタ化推定量 $\mu_{t|t}$ は、

$$ \mu_{t|t} = \hat{\mu}_t + K_t (y_t - \hat{y}_t) $$

となる。
また、状態の予測誤差のフィルタ化推定量 $P_{t|t}$ も以下の式で求められる。

$$ P_{t|t} = (1-K_t)P_t $$

*** カルマンフィルタのまとめ
**** 状態の予測
\[\begin{align} \hat{\mu}_t &= \mu_{t-1|t-1} \\
P_t &= P_{t-1|t-1} + \sigma_w^2 \\
\end{align} \]

**** 観測値の予測
\[ \begin{align}
\hat{y}_t &= \hat{\mu}_t \\
F_t &= P_t + \sigma_v^2 \\
\end{align} \]

**** カルマンゲイン
$$ K_t = \frac{P_t}{F_t} $$

**** 状態の補正
\[ \begin{align}
\mu_{t|t} &= \hat{\mu}_t + K_t(y_t - \hat{y}_t) \\
\[P_{t|t} &= (1-K_t)P_t \\
\end{align} \]

** カルマンフィルタの問題点
状態の予測を行うためには、前期の状態が必要になる。
ところが、一番最初は前期の状態が存在しないので、 $\mu_0$ と $P_0$ に適当な初期値を設定しなければならない。
この初期値に AIC などの情報量基準も依存してしまうので、できれば適当に決めることなしに解決する必要がある。

* 散漫カルマンフィルタ
カルマンフィルタの初期値の問題を解決する方法。
$P_0=\infty$ とする。(この初期化法を **散漫初期化** という)

これによって、ローカルレベルモデルの場合は以下のように $\mu_0$が消える。

$$ \begin{align}
\mu_{1|1} &= \hat{\mu_1} + \cfrac{P_1}{P_1 + \sigma_v^2}(y_1 - \hat{y}_1) \\
&= \mu_{0|0} + \cfrac{P_{0|0} + \sigma_w^2}{P_{0|0} + \sigma_w^2 + \sigma_v^2}(y_1 - \mu_{0|0}) \\
&= \mu_{0|0} + y_1 - \mu_{0|0} \\
&= y_1 \\
\end{align} $$

また、 $P_{1|1}$ についても、以下のように定まる。

$$ \begin{align}
P_{1|1} &= (1-K_1)P_1 \\
&= \left(1 - \cfrac{P_1}{P_1 + \sigma_v^2}  \right)P_1 \\
&= \left(\cfrac{\sigma_v^2}{P_0 + \sigma_w^2 + \sigma_v^2}\right)(P_0 + \sigma_w^2) \\
&= \sigma_v^2 \\
\end{align} $$
* 平滑化
与えられた観測値を用いて、そのもととなる状態よりも過去の状態を補正することを平滑化という。
平滑化によって補正された状態のことを **平滑化状態** と呼ぶ。
** 平滑化のアイディア
1. 予測が外れるのは過去の状態が間違っているからだ。予測が大きく外れるほどに、補正も大きくしよう。
2. 前時点の状態について、不確かさが大きいのなら、補正も大きくしよう。
3. 観測値の予測誤差が大きいなら、観測値は信頼できないので補正は小さくしよう。

従って、

{平滑化状態} = {フィルタ化推定量} + {前時点の状態の分散}/{観測値の予測誤差} * {予測残差}

** 平滑化の数式

最新の時刻を $T$ とする。
時刻 $t$ における平滑化状態とその分散をそれぞれ $\tilde{\mu}_t$ , $\tilde{P}_t$ とおく。
これらは $T$ までの全ての観測値 $Y_T$ が得られた条件における、状態 $\mu_t$ の条件つき期待値と分散なので、

\[ \begin{align} \tilde{\mu}_t &= \mathrm{E}[\mu_t|Y_T] \\
 \tilde{P}_t &= \mathrm{Var}[\mu_t|Y_T] \end{align} \]

と書ける。

その他はカルマンフィルタの記述時の記号法に凖じる。

例えば、 $T-1$ 時点での平滑化推定量の計算式を数式に纏めると、

$$ \tilde{\mu}_{T-1} = \mu_{T-1|T-1} + \frac{P_{T-1|T-1}}{F_T}(y_T - \hat{y}_T) $$

** 状態の予測値、フィルタ化推定量、平滑化状態
似て非なるものなので、少し整理する。
$Y$ の添字に注意。

- 状態の予測値:
  $$ \hat{\mu}_t = \mathrm{E}[\mu_t|Y_{t-1}] $$

- フィルタ化推定量:
  $$ \mu_{t|t} = \mathrm{E}[\mu_t|Y_t] $$

- 平滑化状態:
  $$ \tilde{\mu}_t = \mathrm{E}[\mu_t|Y_T] $$

** 状態平滑化漸化式
平滑化状態の計算に用いる式。
上に示した計算式では、任意の時刻 $t$ における平滑化推定量の導出式にはなっていない。
そこで、状態平滑化漸化式 $r_t$ を導入して、一般形を得る。

\[\begin{align}r_{t-1} &= \frac{y_t - \hat{y}_t}{F_t} + (1 - K_t)r_t \\
\tilde{\mu}_t &= \mu_{t|t} + P_{t|t}r_t \end{align} \]

ただし、 $r_t$ は未来から過去に向かって計算するものとし、
$r_T=0$ とする。

平滑化状態分散 $\tilde{P}_t$ も平滑化状態と同様に状態平滑化漸化式 $s_t$ を用いて求められる。

\[ \begin{align} s_{t-1} &= \frac{1}{F_t} + (1-K_t)^2s_t \\
\tilde{P}_t &= P_{t|t} - P_{t|t}^2s_t \end{align} \]

ただし、 $s_T = 0$
* パラメタ推定
最尤推定によってパラメタ推定を行う。
ここで推定されるパラメタは過程誤差の分散と観測誤差の分散である。

観測値の予測残差 $y_t - \hat{y}_t$ を $d_t$ とおく。
$d_t$ は正規分布に従うものと仮定する。

$$ d_t \sim \mathcal{N}(0, F_t) $$

$d_t$ の確率密度関数 $f(d_t)$ は、

$$ f(d_t) = \frac{1}{\sqrt{2\pi F_t}}\exp\left(-\frac{d_t^2}{2F_t}\right) $$

このとき、尤度を $L$ とすると、

$$ L = \prod_{t=1}^T f(d_t) = \prod_{t=1}^T \frac{1}{\sqrt{2\pi F_t}}\exp\left(-\frac{d_t^2}{2F_t}\right) $$

尤度の自然対数をとって、対数尤度関数とすると、

$$\log{L} = -\frac{T}{2}\log{2\pi} -\frac{1}{2}\sum_{t=1}^T\left\{ \log{F_t} + \frac{d_t^2}{F_t} \right\} $$

実際には、定数項は無視するので、第二項を正負反転させたものを最小化するパラメタを探す。

$$ \frac{1}{2}\sum_{t=1}^T\left\{\log{F_t} + \frac{d_t^2}{F_t} \right\} $$
